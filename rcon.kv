#:import Window kivy.core.window.Window

<MainScreen>:
    md_bg_color: self.theme_cls.backgroundColor
    
    MDNavigationLayout:
        ScreenManager:
            MDScreen:
                BoxLayout:
                    orientation: 'vertical'
                    size_hint: (1,1)
                    spacing: 2
                    MDTopAppBar:
                        type: 'small'
                        size_hint_x: .8
                        MDTopAppBarLeadingButtonContainer:
                            MDActionTopAppBarButton:
                                icon: 'menu'
                                on_release: nav_drawer.set_state("toggle")
                        MDTopAppBarTitle:
                            text: 'Console'
                            pos_hint: {'center_x': .1, 'center_y': .5}
                    MDTextField:
                        mode: 'filled'
                        id: commandInput
                        hint_text: "status"
                        multiline: False
                        write_tab: False
                        on_text_validate: root.callback_exec()
                        MDTextFieldHintText:
                            text: 'Type a command...'
                        MDTextFieldLeadingIcon:
                            icon: 'powershell'
                    TextInput:
                        id: console
                        readonly: True
                        background_color: root.theme_cls.backgroundColor
                        foreground_color: (1,1,1,1)
                        scroll_y: 0
                        text: "Try typing `clear` command.\n\n\n\nMake sure text fields look interactive\nTwo types: filled and outlined\nThe text field state (blank, with input, error, etc) should be visible at a glance\nKeep labels and error messages brief and easy to act on\nText fields commonly appear in forms and dialogs"
                MDButton:
                    pos_hint: {"center_x": .5, "center_y": .5}
                    on_release: nav_drawer.set_state("toggle")#root.callback_exec()#
                    MDButtonText:
                        text: "Open Drawer"
        MDNavigationDrawer:
            id: nav_drawer
            radius: 0, dp(16), dp(16), 0
            type: 'modal'
            MDNavigationDrawerMenu:
                MDNavigationDrawerLabel:
                    text: "Wolf Pack RCON Tool"
                MDNavigationDrawerItem:
                    on_release: print("hello from drawer item")
                    MDNavigationDrawerItemLeadingIcon:
                        icon: "server"
                    MDNavigationDrawerItemText:
                        text: "Servers"
                    MDNavigationDrawerItemTrailingText:
                        text: "0"
                
                MDNavigationDrawerItem:
                    on_release: root.manager.current = "settings"
                    MDNavigationDrawerItemLeadingIcon:
                        icon: 'cog'
                    MDNavigationDrawerItemText:
                        text: 'Settings'
                
                MDNavigationDrawerDivider:

<SettingsScreen>:
    md_bg_color: self.theme_cls.backgroundColor
    
    MDNavigationLayout:
        ScreenManager:
            MDScreen:
                ScrollView:
                    MDList:
                        MDTopAppBar:
                            type: 'small'
                            size_hint_x: .8
                            MDTopAppBarLeadingButtonContainer:
                                MDActionTopAppBarButton:
                                    icon: 'arrow-left'
                                    on_release: root.manager.current = "main"
                            MDTopAppBarTitle:
                                text: 'Settings'
                                pos_hint: {'center_x': .1, 'center_y': .5}
                        MDListItem:
                            on_release: root.manager.current = "appearance"#print("Appearance Settings")
                            MDListItemLeadingIcon:
                                icon: 'eye'
                            MDListItemSupportingText:
                                text: 'Appearance'
                            MDListItemTrailingIcon:
                                icon: 'chevron-right'

<AppearanceSettings>:
    md_bg_color: self.theme_cls.backgroundColor
    ScrollView:
        MDList:
            MDTopAppBar:
                type: 'small'
                size_hint_x: .8
                MDTopAppBarLeadingButtonContainer:
                    MDActionTopAppBarButton:
                        icon: 'arrow-left'
                        on_release: root.manager.current = "settings"
                MDTopAppBarTitle:
                    text: 'Appearance Settings'
                    pos_hint: {'center_x': .1, 'center_y': .5}
            MDListItem:
                on_release: app.toggleDarkMode()
                MDListItemLeadingIcon:
                    icon: 'theme-light-dark'
                MDListItemSupportingText:
                    text: "Switch Theme Style"
            MDListItem:
                id: colorMenuButton1
                on_release: root.colorMenu(1)
                MDListItemLeadingIcon:
                    icon: 'format-color-fill'
                MDListItemSupportingText:
                    text: 'Choose Theme Color (Set 1)'
            MDListItem:
                id: colorMenuButton2
                on_release: root.colorMenu(2)
                MDListItemLeadingIcon:
                    icon: 'format-color-fill'
                MDListItemSupportingText:
                    text: 'Choose Theme Color (Set 2)'